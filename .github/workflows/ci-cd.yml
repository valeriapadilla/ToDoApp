name: CI/CD Pipeline

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      SQLITE_DB_LOCATION: "/tmp/todo.db"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          npm install 
          npm test

  build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-app
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          

  deploy:
    needs: [build-test, build-push]
    runs-on: self-hosted
    steps:
      - name: Extract version (remove 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ env.VERSION }}

      - name: Stop and remove previous container
        run: |
          docker stop todo-app || true
          docker rm todo-app || true

      - name: Run new container
        run: docker run -d --name todo-app -p 80:3000 ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ env.VERSION }}
